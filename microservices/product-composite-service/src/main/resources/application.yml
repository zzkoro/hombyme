api:
  common:
    version: 1.0.0
    title: Sample API
    description: Description of the API...
    termsOfServiceUrl: MINE TERMS OF SERVICE URL
    license: License
    licenseUrl: MY LICENSE URL

    contact:
      name: Contact
      url: My
      email: me@email.com

  product-composite:
    get-composite-product:
      description: Returns a composite view of the specified product id
      notes: |
        # Normal response
        If the requested product id is found the method will return information regarding:
        1. Base product information
        1. Reviews
        1. Recommendations
        1. Service Addresses\n(technical information regarding the addresseds of the microservices that created the response)


server.port: 7000
server:
  error:
    include-message: always

logging:
  level:
    root: INFO
    com.jipps: DEBUG

app:
  product-service:
    host: localhost
    port: 7001
  recommendation-service:
    host: localhost
    port: 7002
  review-service:
    host: localhost
    port: 7003

spring:
  cloud:
    stream:
      defaultBinder: rabbit
      default.contentType: application/json
      bindings:
        output-products:
          destination: products
          producer:
            required-groups: auditGroup
        output-recommendations:
          destination: recommendations
          producer:
            required-groups: auditGroup
        output-reviews:
          destination: reviews
          producer:
            required-groups: auditGroup

  rabbitmq:
    host: 127.0.0.1
    port: 5672
    username: guest
    password: guest

---
spring.profiles: docker

server:
  port: 8080

app:
  product-service:
    host: product
    port: 8080
  recommendation-service:
    host: recommendation
    port: 8080
  review-service:
    host: review
    port: 8080

spring.rabbitmq.host: rabbitmq

spring.cloud.stream.kafka.binder.brokers: kafka